Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = id: 10000
ii. Hours =  business_id: 1562
iii. Category = business_id: 2643
iv. Attribute = business_id: 1115
v. Review = business_id: 8090
vi. Checkin = business_id: 493
vii. Photo = business_id: 6493
viii. Tip = user_id: 537
ix. User = id: 10000
x. Friend = user_id: 11
xi. Elite_years = user_id: 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: no
	
	
	SQL code used to arrive at answer:
	
		Select count(*)
		From user
		Where id is null;

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max: 5		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min: 1		max: 5		avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 200	avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:

		SELECT 
    		   city, 
    		   COUNT(review_count)
		FROM business
		GROUP BY(city)
		ORDER BY COUNT(review_count) DESC;
	
	Copy and Paste the Result Below:
+-----------------+---------------------+
| city            | COUNT(review_count) |
+-----------------+---------------------+
| Las Vegas       |                1561 |
| Phoenix         |                1001 |
| Toronto         |                 985 |
| Scottsdale      |                 497 |
| Charlotte       |                 468 |
| Pittsburgh      |                 353 |
| Montréal        |                 337 |
| Mesa            |                 304 |
| Henderson       |                 274 |
| Tempe           |                 261 |
| Edinburgh       |                 239 |
| Chandler        |                 232 |
| Cleveland       |                 189 |
| Gilbert         |                 188 |
| Glendale        |                 188 |
| Madison         |                 176 |
| Mississauga     |                 150 |
| Stuttgart       |                 141 |
| Peoria          |                 105 |
| Markham         |                  80 |
| Champaign       |                  71 |
| North Las Vegas |                  70 |
| North York      |                  64 |
| Surprise        |                  60 |
| Richmond Hill   |                  54 |
+-----------------+---------------------+
(Output limit exceeded, 25 of 362 total rows shown)
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon 10 | 4.0 ratings

SQL code used to arrive at answer:
	Select 
   	 stars As 'star rating',
   	 Count(stars) as 'count'
	From business
	group by(city)
	having city = 'Avon';
	


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

+-------------+-------+
| star rating | count |
+-------------+-------+
|         4.0 |    10 |
+-------------+-------+


ii. Beachwood 14 | 5.0 rating

SQL code used to arrive at answer:
	Select 
   	 stars As 'star rating',
   	 Count(stars) as 'count'
	From business
	group by(city)
	having city = 'Beachwood';
	

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

+-------------+-------+
| star rating | count |
+-------------+-------+
|         5.0 |    14 |
+-------------+-------+
		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
		Select 
    		  name,
    		  Count(review_count) as 'reviews'
		from user
		group by(name)
		order by Count(review_count) desc;
				

	Copy and Paste the Result Below:

+----------+---------+
| name     | reviews |
+----------+---------+
| John     |     102 |
| David    |      90 |
| Chris    |      74 |
| Mike     |      74 |
| Michael  |      72 |
| Jennifer |      63 |
| Mark     |      59 |
| Lisa     |      58 |
| Melissa  |      58 |
| Sarah    |      55 |
| Alex     |      54 |
| James    |      48 |
| Jessica  |      45 |
| Ryan     |      45 |
| J        |      43 |
| Michelle |      43 |
| Andrew   |      41 |
| Kevin    |      41 |
| Mary     |      41 |
| Amanda   |      40 |
| Ashley   |      40 |
| Brian    |      40 |
| Karen    |      40 |
| Laura    |      39 |
| Robert   |      39 |
+----------+---------+
(Output limit exceeded, 25 of 3454 total rows shown)
		


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	No. Reviews has no relationship with the number of fans the user would get. Proove with the 
	first 10 results

+----------+--------------+------+
| name     | review count | fans |
+----------+--------------+------+
| John     |          102 |    5 |
| David    |           90 |    0 |
| Chris    |           74 |    1 |
| Mike     |           74 |    0 |
| Michael  |           72 |    1 |
| Jennifer |           63 |    0 |
| Mark     |           59 |    0 |
| Lisa     |           58 |    0 |
| Melissa  |           58 |    0 |
| Sarah    |           55 |    0 |
+----------+--------------+------+

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: More love than hate
		love = 1780
		hate = 232

	
	SQL code used to arrive at answer:
Select
    Count(*)
from review
where text like '%love%';

Select
    Count(*)
from review
where text like '%hate%';
	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
		Select 
    		  name,
    	 	  Count(fans) as 'Number of Fans'
		From user
		group by(name)
		order by Count(fans) desc
		limit 10;
		
	
	
	Copy and Paste the Result Below:

+----------+----------------+
| name     | Number of Fans |
+----------+----------------+
| John     |            102 |
| David    |             90 |
| Chris    |             74 |
| Mike     |             74 |
| Michael  |             72 |
| Jennifer |             63 |
| Mark     |             59 |
| Lisa     |             58 |
| Melissa  |             58 |
| Sarah    |             55 |
+----------+----------------+

	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?
No, hours is not a factor


ii. Do the two groups you chose to analyze have a different number of reviews?
Yes, review_counts are included in the analysis.
         
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
YES. Location data is dependent on the neighborhood of the business in the city.


SQL code used for analysis:
Select *
From business
where city = 'Toronto'
group by(stars)
order by Count(stars) desc;

RESULTS:
+------------------------+------------------------------------------+-----------------+---------------------+---------+-------+-------------+----------+-----------+-------+--------------+---------+
| id                     | name                                     | neighborhood    | address             | city    | state | postal_code | latitude | longitude | stars | review_count | is_open |
+------------------------+------------------------------------------+-----------------+---------------------+---------+-------+-------------+----------+-----------+-------+--------------+---------+
| 37YLTHLnqegSB49N06IHog | Cherry Beach                             |                 | 275 Unwin Ave       | Toronto | ON    | M5H 2N2     |  43.6365 |  -79.3441 |   4.0 |           23 |       1 |
| 38k_heLKR2J5P7JKV2AonQ | Eki-Bento Japanese Express               | Downtown Core   | 403 Yonge Street    | Toronto | ON    | M5B 1L2     |  43.6594 |  -79.3821 |   3.5 |           19 |       0 |
| 35ET2yviSxhkMmQa89rFKA | The Jersey Giant                         | St. Lawrence    | 71 Front Street E   | Toronto | ON    | M5E 1T9     |  43.6485 |  -79.3732 |   3.0 |           45 |       1 |
| 37oAPnVF_mXRz_O7Z0uQjA | The Moment Photography                   |                 | 3030 Don Mills Road | Toronto | ON    | M2J 3C1     |  43.7783 |  -79.3486 |   4.5 |            3 |       1 |
| 33hBdrw45g9OB_uS-802Lw | Planet Fitness - Toronto - Galleria Mall | Wallace Emerson | 1245 Dupont Street  | Toronto | ON    | M6H         |  43.6679 |   -79.442 |   2.5 |           29 |       1 |
| 36SbEb0QZp_qdmTH81qQDQ | Mr. Nonno Barber Shop                    | Palmerston      | 609 Bloor Street W  | Toronto | ON    | M6G 1K4     |   43.664 |  -79.4129 |   5.0 |           16 |       1 |
| 35Mdu_9unGIn4pMoQByWFQ | Signatures Restaurant                    | The Annex       | 220 Bloor St W      | Toronto | ON    | M5S 1W2     |  43.6684 |  -79.3964 |   2.0 |            5 |       1 |
| 2y7QIszMf2J7Vcs5gcPMGg | Avis Rent A Car                          | Willowdale      | 4841 Yonge St       | Toronto | ON    | M2N 5X2     |   43.762 |  -79.4103 |   1.5 |            7 |       1 |
| 2ZaVn16YLg6_lZdmwTRwsA | Alicos Copy Centre                       | Downtown Core   | 366 Church Street   | Toronto | ON    | M5B 1G3     |    43.66 |  -79.3789 |   1.0 |            4 |       0 |
+------------------------+------------------------------------------+-----------------+---------------------+---------+---

		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
        Location difference
         
ii. Difference 2:
         Type of businness
         
         
SQL code used for analysis:
Select 
    name,
    city,
    stars,
    review_count,
    is_open As 'status'
From business
group by(is_open);
	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
         Predicting the number of fans a user would have
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
Users name, number of fans of user, review_count, how funny the user is, number of stars.
This data would help me know the factors the predict the number of fans a user would have
                           
                  
iii. Output of your finished dataset:
+---------+------+--------------+-------+-------+
| name    | fans | review_count | funny | stars |
+---------+------+--------------+-------+-------+
| Lissa   |  120 |          834 |   150 |  None |
| Ed      |   38 |          904 |    88 |     2 |
| Dominic |   37 |          836 |    26 |  None |
| Elaine  |   18 |          332 |    21 |  None |
| Dixie   |   41 |          503 |    32 |     4 |
| Jia     |    8 |          228 |    28 |  None |
| Matt    |   14 |          476 |    15 |  None |
| Danial  |    5 |          136 |     3 |  None |
| Justin  |   13 |          177 |    11 |  None |
| Mel     |    9 |          156 |    32 |  None |
| Nieves  |   80 |          178 |   774 |     4 |
| Chris   |    2 |           70 |     7 |  None |
| Lalena  |   25 |          224 |   101 |  None |
| Tasha   |    8 |          250 |    11 |  None |
| Brad    |    1 |          182 |    22 |  None |
| Kristen |   15 |          428 |    11 |  None |
| Tracy   |    5 |           71 |     4 |  None |
| Jamie   |    4 |           95 |     0 |  None |
| Keith   |    3 |           61 |     2 |  None |
| Maung   |    0 |           54 |     1 |  None |
| Sapna   |    1 |           38 |     0 |  None |
+---------+------+--------------+-------+-------+
         
         
iv. Provide the SQL code you used to create your final dataset:
Select 
    u.name,
    u.fans,
    u.review_count,
    u.funny,
    r.stars
From user u
left Join review r
    on r.user_id = u.id
Join elite_years e
    on e.user_id = u.id
group by (u.name)
order by Count(u.fans) desc;